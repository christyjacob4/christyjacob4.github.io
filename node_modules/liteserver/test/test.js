var path = require('path');
var config = {
  port: 54321,
  root: __dirname,
  tpl: './tpl',
  maxPostFieldsSize: 10240,
  redirectAccess: {
    'taobao.com' : true
  }
};

exports.startServer = startServer;

function startServer(Liteserver) { 
  var serv = Liteserver.create(config);
  var log = Liteserver.Log.create({
    sys: {
      level: 'DEBUG',
      file : path.join(__dirname, './logs/log.%day%.log')
    }
  });
  serv.setLog(log);
  var Controllers = serv.load('./ctrls');
  // load controller
  serv.router({
    '/tpl' : function (req, res) {
      res.render('test.tpl', {
        abc: 'success'
      });
    },
    '/tplheader' : function (req, res) {
      res.setHeader('content-type', 'application/hello');
      res.render('test.tpl', {abc: 'hello'});
    },
    '/test' : function (req, res) {
      // getRouter Twice , check if cache
      var a = req.getRouter();
      var b = req.getRouter();
      if (a !== b) {
        return res.json({c: 'error'});
      }
      res.json(req.getRouter());
    },
    '/loadedController' : Controllers.test,
    '/loadedControllerDir' : Controllers.dir,
    '*test': function (req, res) {
      res.json({path: req.url});
    },
    '(a|b)test.abc': function (req, res) {
      res.json({path: req.url});
    },
    '/' : function (req, res) {
      res.json({path: req.url, get: req.getQuery()});
    },
    '/cookie' : function (req, res) {
      // check cookie cache
      var cookie = req.getCookie();
      var cookie2 = req.getCookie();
      var cookieRaw = req.getCookieRaw();
      if (cookie !== cookie2) {
        return res.json({c: 'error'});
      }
      res.json({
        cookie : cookie,
        cookieRaw : cookieRaw
      });
    },
    '/setCookie' : function (req, res) {
      res.setCookie('abc', '123');
      res.statusCode = 304;
      res.end('');
    },
    '/500' : function (req, res) {
      JSON.parse('{a}');
      res.json({});
    },
    '/post' : function (req, res) {
      req.getPost(function (err, data) {
        res.json(data);
      });
    },
    '/preparePost' : function (req, res) {
      var r = req.getRouter();
      req.preparePost();
      setTimeout(function () {
        if (r.action === 'cb') {
          req.getPost(function (err, data) {
            res.json(data);
          });
        } else {
          req.getPost();
          req.on('post', function (err, data, file) {
            res.json(data);
          });
        }
      }, 100);
    },
    '/preparePost1' : function (req, res) {
      req.preparePost();
      req.getPost(function (err, data) {
        res.json(data);
      });
    },
    '/postFile': function (req, res) {
      req.getPost(function (err, data, files) {
        if (err) {
          return res.end('error');
        }
        res.json(files);
      });
    },
    '/redirect' : function (req, res) {
      res.redirect('/abc');
    },
    '/redirectDenial' : function (req, res) {
      res.redirect('http://www.taobao.com');
    },
    '/redirectAccess' : function (req, res) {
      res.redirect('http://taobao.com/abc');
    },
    '/gzip' : function (req, res) {
      res.gzip({a: 1});
    },
    '/gzip_string' : function (req, res) {
      res.gzip('abc');
    },
    '/set_cookie_twice' : function (req, res) {
      res.setCookie('a', 1);
      res.done('one');
      res.setCookie('b', 2);
      res.end('two');
    },
    '/dispatch' : function (req) {
      var act = req.getRouter().action;
      req.dispatch(act, {
        $default: function (req, res, config) {
          if (config) {
            res.end('ok');
          } else {
            res.end('error');
          }
        },
        $test : function (req, res) {
          res.jsonp('test', {ok: true});
        }
      });
    },
    '500' : function (req, res) {
      if (req.error) {
        res.done('500 server error custom,' + req.error.stack);
      } else {
        res.end('error');
      }
    }
  }).view({
    debug : true,
    compress : true,
    constant : {root: 'abc'}
  }).start(function () {
    log.info('server start');
  });
  return serv;
}